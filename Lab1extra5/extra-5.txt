extra 5 для лабораторної 1
Етап 1 до програмування – планування та прогноз
Крок 1 Ознайомлення з умовою, вибір завдань з списку 1 і списку 2 для реалізації – 20 хв
Крок 2 Реалізувати клас Library								8 год, реалізувати з 23.09.2020 до 26.09.2020
	- підкрок 1 реалізація Book							2 год
	- підкрок 2 реалізація BookCharacter						2 год
	- підкрок 3 реалізація саме класу Library, поєднання інших класів в ньому	4 год
Крок 3 Реалізувати Віртуальний клас Граф і 2 реалізації його графів - спадкоємців	8 год
	- підкрок 1 Реалізація класу на основі матриці суміжності			2 год
	- підкрок 2 Реалізація класу на основі списку суміжності			2 год
	- підкрок 3 Реалізація віртуального класа і роботи з ним			4 год, реалізувати з 26.09.2020 до 27.09.2020
Крок 4 Доповнення написаних під час реалізації юніт-тестів, 				2 год, реалізувати з 27.09.2020 до 28.09.2020
Крок 5 Заміри швидкості роботи алгоритмів						1.5 год, реалізувати з 27.09.2020 до 28.09.2020

Якщо буде час
	- зробити ще один Клас для списку суміжності на основі vector<set>		3-4 год
	- документація									3-4 год
	- доповнення функцій бібліотеки, можливо, ще якісь допрацювання, робота над 	Покращувати можна вічно, але нехай буде 4 год
		додатковими *
											Все це до 29.09.2020


Етап 2: під час програмування – фіксація часу виконання (timetracking)
1) Почав роботу (крок 1)    						23.30 - 24.00					22.09.2020,
	Виникли питання, вибір структур залежить від відповіді на питання.
2) Формулювання запитань по умові лабораторної. 			9.00 - 9.30,					23.09.2020
3) Закінчення першого етапу extra 5. 					18.30 - 19.00,					23.09.2020
4) Початок роботи над класом Library і класами, пов'язаними з ним 	19.00 - 00.08 (Чистої роботи 2-2.5 години)	23.09.2020
	Зробив основні функції для Book i BookCharacter
5) Продовження роботи над класами бібліотеки, все зламалось(		16-00 - 20-00					24.09.2020
через map-и з ключами Book i BookCharacter
6) Переосмислення основного класу.					19-00 - 01-00					25-26.09.2020
	Реалізую нову ідею. Клас не бібліотека, а видавництво, яке видає по одній книзі в день, нова книга відразу потрапляє в потрібні серії
7) Спроби зробити видавництво.						15-00 - 19-00					26.09.2020
	Пробував зробити видавництво, але зрозумів, що зробити його у такому вигляді як я хотів складніше, ніж я думав.
	Буду робити структуру для дати, а почату тему сильно спрощу і дороблю.
8) Переробив видавництво						20-00 - 01-00					26-27.09.2020
9) Змінив id книг і героїв на їхні імена				11-00 - 11-20					27.09.2020
10) Додав юніт-тести для героїв						12-00 - 14-00					27.09.2020
11) Створив основні методи для класу Date				16-00 - 18-00, 21-30 - 23-30			27.09.2020
	Поки тільки ескіз, без тестування
12) Додав тести для Book						23-30 - 24-00					27.09.2020
13) Повністю закінчив класи, пов'язані з книгами, додав тести		15-00 - 18-00, 20-00 - 21-50			28.09.2020
14) Виправив деякі помилки в Date, додав тести				22-00 - 01-00					28-29.09.2020
15) Доробив клас дат, додав часові зони і тести				12-00 - 16-00, 18-00 - 20-30			29.09.2020
16) Додав графи, поки що без template, такі самі як в 2 семестрі	20-30 - 20-40					29.09.2020
17) Додав додаткові можливості в дати, зробив тести до них		13-30 - 15-30					30.09.2020
18) Почав реалізацію графів						20-00 - 22-00					30.09.2020
19) Реалізував всі заплановані алгоритми для графів			17-00 - 19-30					01.10.2020
20) Прибрав часові зони з дат(скоріше за все там були помилки),виправив 21-00 - 00-00					02.10.2020
	деякі помилки в графах і написав початкові тести для них
21) Доробив графи і тести до них, фінальні правки перед документацією	10-00 - 15-50					04.10.2020
22) Зробив документацію для класів. Залишилось для функцій		21-00 - 00-00					04.10.2020
23) Доробив документацію, фінальний коміт				19-00 - 21-45					05.10.2020

Етап 3: після програмування – аналіз
1. Які кроки виявились найскладнішими для розуміння та реалізації? Чому? Які кроки зайняли найбільше часу? Чому?
- Найважче було зробити розбиття книг на серії (довго вагався між декількома варіантами контейнерів і часом розбиття 
(віддавати готові серії чи розбивати на серії під час запросу)), правильно зробити збільшення і зменшення дати, різниці між датами.
Також, придумати тести (особливо для дат, бо там є дуже багато різних нюансів)
2. Які кроки виявились найпростішими для розуміння та реалізації? Чому? Які кроки зайняли найменше часу? Чому?
- Графи, бо вони були зроблені з минулого семестра, залишалось лише переробити під темплейт і додати базовий клас.
3. Чи були під час реалізації певні суттєві кроки, про які не згадали під час планування/прогнозування? Чому?
- Зовсім не планував реалізацію дат
4. Чи були якісь заздалегідь заплановані кроки, які виявились непотрібними? Чому?
- відмовився від замірів швидкості, тому що не вистачило часу
5. Чи були якісь кроки, які зайняли суттєво більше часу, ніж планувалось? Чому?
- реалізація розбиття на серії книг і планування внутрішньої будови класу для зберігання книг і героїв. Так сталося, бо я довго хапався
за ідею, що серії повинні оновлюватися після кожної зміни книг чи героїв і коли прийде запрос про серії, віддавати готові. Але, як виявилося, 
по часу і складності це виявилося б ще складніше, ніж формувати серії конкретно у відповідь на запрос
6. Чи було припущено якихось суттєвих помилок під час реалізації, які негативно вплинули на час розробки, чи на якість коду, чи змусили
переробляти значні фрагменти коду? Як можна уникати подібних помилок?
- Ще не обравши контейнер для зберігання дат і героїв і структуру формування серій, я починав робити легші по реалізації методи PublishingHouse, 
а коли змінював контейнери чи формування серій, мав переробляти всі ці маленькі методи. Як уникати - краще продумувати все наперед або спочатку
робити лише основні методи, від яих залежать поля класів, а вже потім всі інші.
7. Чи були якісь «моменти прозріння» – наприклад, вдалось реалізувати якусь функціональність ефективним чином, чи придумати або
адаптувати алгоритм до даної задачі, чи зрозуміти якісь раніше незрозумілі аспекти розробки, чи зрозуміти, як використовувати якісь
принципи чи підходи на практиці, чи ще щось подібне?
- розібрався, як можна зробити std::set або std::map з ключем - моїм класом
8. Враховуючи досвід реалізації, чи варто було б інакше підходити до планування завдань? Наприклад, звертати більше уваги на якісь
аспекти, чи виділяти більше (або менше) часу на якісь типи завдань, або ще щось?
- в загальному, виділяти приблизно в 2 рази більше часу на кожне з завдань, суттєво більше часу виділяти на написання тестів і виправлення
помилок

В загальному, можу сказати, що трохи переоцінив свої можливості і пізно почав робити цю лабораторну (витратив у 2 рази більше часу ніж планував)
Можливо, частково це через те, що вирішив зробити ще й клас для дат. Також, не треба було планувати все завершити рівно перед дедлайном, залишити
ще якусь "захисну подушку".